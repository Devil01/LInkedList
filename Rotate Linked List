//Rotate Linked List ..

/*
struct node{
   int data;
   node* next;
};
void Push(node**head,int x)
{
    node *newnode=new node();
    newnode->data=x;
    newnode->next=*head;
    *head=newnode;
}
void RotateList(node **head,int k)
{
    if(k==0)
        return;
    node *current=*head;
    int cnt=1;
    while( cnt<k && current!=NULL)
     {
         
         current=current->next;
         cnt++;
     }
     if(current==NULL)
        return;
     node *temp=current;
     while(current->next!=NULL)
        current=current->next;
     
     current->next=*head;
     *head=temp->next;
        temp->next=NULL;
}
void PrintList(node *head)
{
    while(head!=NULL){
        cout<<head->data<<" ";
        head=head->next;
    }
    cout<<endl;
}
int main()
{
    node *head=NULL;
    Push(&head,60);
    Push(&head,50);
    Push(&head,40);
    Push(&head,30);
    Push(&head,20);
    Push(&head,10);
    PrintList(head);
    RotateList(&head,4);
    PrintList(head);
    return 0;
}
*/
